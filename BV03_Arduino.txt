/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/ce3ccfb5-ee82-4f65-94ce-24dd85c57911 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudElectricCurrent current1;
  CloudElectricCurrent current2;
  CloudElectricCurrent current3;
  CloudElectricCurrent current_total;
  CloudElectricPotential voltage1;
  CloudElectricPotential voltage2;
  CloudElectricPotential voltage3;
  CloudFrequency frequency;
  CloudPower apparentpower1;
  CloudPower apparentpower2;
  CloudPower apparentpower3;
  CloudPower powerfactor1;
  CloudPower powerfactor2;
  CloudPower powerfactor3;
  CloudPower reactivepower1;
  CloudPower reactivepower2;
  CloudPower reactivepower3;
  CloudPower realpower1;
  CloudPower realpower2;
  CloudPower realpower3;
  bool load1;
  bool load2;
  bool load3;
  bool load4;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

unsigned long start, stop;
const unsigned long reldel = 200;
int c1 = false, c2 = false, c3 = false, c4 = false, btin = false;
float v1, v2, v3, f, 
i1, i2, i3, it, 
pf1, pf2, pf3, 
real_power1, real_power2, real_power3, 
reactive_power1, reactive_power2, reactive_power3, 
apparent_power1, apparent_power2, apparent_power3;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  // delay(1500); 
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, HIGH);
  
  pinMode(D0, OUTPUT);
  pinMode(D1, OUTPUT);
  pinMode(D2, OUTPUT);
  pinMode(D3, OUTPUT);

  // Initialize Opta LEDs
  pinMode(LED_D0, OUTPUT);
  pinMode(LED_D1, OUTPUT);
  pinMode(LED_D2, OUTPUT);
  pinMode(LED_D3, OUTPUT);
  
  // Initialize Digital Pins
  pinMode(A0, INPUT);
  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  pinMode(A3, INPUT);
  start = millis();

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  // Serial.println("WELCOME");
  digitalWrite(LED_D0, HIGH);
  digitalWrite(D0, HIGH);
  digitalWrite(LED_D1, HIGH);
  digitalWrite(D1, HIGH);
  digitalWrite(LED_D2, HIGH);
  digitalWrite(D2, HIGH);
  digitalWrite(LED_D3, HIGH);
  digitalWrite(D3, HIGH);
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  // Serial.println("moo");
  stop = millis();
  if ((stop - start) >= reldel) {
    buttons();
    start = millis();
  }
  relays();
  //serial_button();
  serial_read();
  fuse();
}

void serial_read(){
  if (Serial.available() > 0) {
    // Read the incoming values separated by comma and newline
    String receivedData = Serial.readStringUntil('\n');
    
    sscanf(receivedData.c_str(), "%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f", 
    &v1, &v2, &v3, &f, 
    &i1, &i2, &i3, &it, 
    &pf1, &pf2, &pf3, 
    &real_power1, &real_power2, &real_power3, 
    &reactive_power1, &reactive_power2, &reactive_power3, 
    &apparent_power1, &apparent_power2, &apparent_power3);
    voltage1 = v1;
    voltage2 = v2;
    voltage3 = v3;
    frequency = f;
    current1 = i1;
    current2 = i2;
    current3 = i3;
    current_total = it;
    powerfactor1 = pf1;
    powerfactor2 = pf2;
    powerfactor3 = pf3;
    realpower1 = real_power1;
    realpower2 = real_power2;
    realpower3 = real_power3;
    reactivepower1 = reactive_power1;
    reactivepower2 = reactive_power2;
    reactivepower3 = reactive_power3;
    apparentpower1 = apparent_power1;
    apparentpower2 = apparent_power2;
    apparentpower3 = apparent_power3;
  }
}
void fuse(){
  if (it >= 10){
    // digitalWrite(LED_D0, LOW);
    // digitalWrite(D0, LOW);
    c1 = false;
    c2 = false;
    c3 = false;
    c4 = false;
  }
  if (i1 >= 5){
    // digitalWrite(LED_D1, LOW);
    // digitalWrite(D1, LOW);
    c2 = false;
  }
  if (i2 >= 5){
    // digitalWrite(LED_D2, LOW);
    // digitalWrite(D2, LOW);
    c3 = false;
  }
  if (i3 >= 5){
    // digitalWrite(LED_D3, LOW);
    // digitalWrite(D3, LOW);
    c4 = false;
  }
}

void serial_button(){
  if (Serial.available() > 0) {
    // Read the incoming byte
    String command = Serial.readStringUntil('\n');
    // Perform an action based on the command
    if (command == "A") {
      // Serial.println("A");
      c1 = true;
    }
    if(command == "a"){
      // Serial.println("a");
      c1 = false;
    }
    
    if (command == "B") {
      // Serial.println("B");
      c2 = true;
    }
    if(command == "b"){
      // Serial.println("b");
      c2 = false;
    }
    
    if (command == "C") {
      // Serial.println("C");
      c3 = true;
    }
    if(command == "c"){
      // Serial.println("c");
      c3 = false;
    }
    
    if (command == "D") {
      // Serial.println("D");
      c4 = true;
    }
    if(command == "d"){
      // Serial.println("d");
      c4 = false;
    }
    
    if (command == "AA") {
      // Serial.println("AA");
      c1 = true;
      c2 = true;
      c3 = true;
      c4 = true;
    }
    if(command == "aa"){
      // Serial.println("aa");
      c1 = false;
      c2 = false;
      c3 = false;
      c4 = false;
    }
  }
}

void buttons() {
  int t1 = digitalRead(A0);
  int t2 = digitalRead(A1);
  int t3 = digitalRead(A2);
  int t4 = digitalRead(A3);
  int bt = digitalRead(BTN_USER);

  if (t1 == HIGH) {
    if (c1 != true) {
      c1 = true;
    }
    else {
      c1 = false;
    }
  }

  if (t2 == HIGH) {
    if (c2 != true) {
      c2 = true;
    }
    else {
      c2 = false;
    }
  }

  if (t3 == HIGH) {
    if (c3 != true) {
      c3 = true;
    }
    else {
      c3 = false;
    }
  }

  if (t4 == HIGH) {
    if (c4 != true) {
      c4 = true;
    }
    else {
      c4 = false;
    }
  }

  if (bt == LOW) {
    if (btin != true) {
      c1 = true;
      c2 = true;
      c3 = true;
      c4 = true;
      //btin = true;
      // Serial.println("All Relays ON");
    }
    else {
      c1 = false;
      c2 = false;
      c3 = false;
      c4 = false;
      // btin = false;
      // Serial.println("All Relays OFF");
    }
  }
}

void relays() {
  if (c1 == true) {
    // Serial.println("A");
    digitalWrite(LED_D0, HIGH);
    digitalWrite(D0, HIGH);
  }
  if (c1 == false) {
    // Serial.println("a");
    digitalWrite(LED_D0, LOW);
    digitalWrite(D0, LOW);
  }
  if (c2 == true) {
    // Serial.println("B");
    digitalWrite(LED_D1, HIGH);
    digitalWrite(D1, HIGH);
  }
  if (c2 == false) {
    // Serial.println("b");
    digitalWrite(LED_D1, LOW);
    digitalWrite(D1, LOW);
  }
  if (c3 == true) {
    // Serial.println("C");
    digitalWrite(LED_D2, HIGH);
    digitalWrite(D2, HIGH);
  }
  if (c3 == false) {
    // Serial.println("c");
    digitalWrite(LED_D2, LOW);
    digitalWrite(D2, LOW);
  }
  if (c4 == true) {
    // Serial.println("D");
    digitalWrite(LED_D3, HIGH);
    digitalWrite(D3, HIGH);
  }
  if (c4 == false) {
    // Serial.println("d");
    digitalWrite(LED_D3, LOW);
    digitalWrite(D3, LOW);
  }

}

/*
  Since Load1 is READ_WRITE variable, onLoad1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLoad1Change()  {
  // Add your code here to act upon Load1 change
  if (load1 == HIGH) {
    if (c1 != true) {
      Serial.println("A");
      c1 = true;
      // Serial.println("A");
    }
    else {
      Serial.println("a");
      c1 = false;
      // Serial.println("a");
    }
  }
}

/*
  Since Load2 is READ_WRITE variable, onLoad2Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLoad2Change()  {
  // Add your code here to act upon Load2 change
  if (load2 == HIGH) {
    if (c2 != true) {
      Serial.println("B");
      c2 = true;
      // Serial.println("B");
    }
    else {
      Serial.println("b");
      c2 = false;
      // Serial.println("b");
    }
  }
}

/*
  Since Load3 is READ_WRITE variable, onLoad3Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLoad3Change()  {
  // Add your code here to act upon Load3 change
  if (load3 == HIGH) {
    if (c3 != true) {
      Serial.println("C");
      c3 = true;
      // Serial.println("C");
    }
    else {
      Serial.println("c");
      c3 = false;
      // Serial.println("c");
    }
  }
}

/*
  Since Load4 is READ_WRITE variable, onLoad4Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLoad4Change()  {
  // Add your code here to act upon Load4 change
  if (load4 == HIGH) {
    if (c4 != true) {
      Serial.println("D");
      c4 = true;
      // Serial.println("D");
    }
    else {
      Serial.println("d");
      c4 = false;
      // Serial.println("d");
    }
  }
}


